/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SweepableBridgeReceiverHarness,
  SweepableBridgeReceiverHarnessInterface,
} from "../SweepableBridgeReceiverHarness";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "BadData",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToSendNativeToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProposalId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimelockAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalNotExecutable",
    type: "error",
  },
  {
    inputs: [],
    name: "TransactionAlreadyQueued",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferOutFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "govTimelock",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "localTimelock",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "govTimelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_govTimelock",
        type: "address",
      },
      {
        internalType: "address",
        name: "_localTimelock",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localTimelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageExternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum BaseBridgeReceiver.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234610016576118c9908161001c8239f35b600080fdfe6080604052600436101561000f57005b60003560e01c8063013cf08b146100ea5780630d61b519146100e1578063158ef93e146100d857806322086dbe146100cf578063258836fe146100c65780633e4f49e6146100bd578063485cc955146100b4578063824343dd146100ab578063b660c156146100a2578063da35c664146100995763e231ac361461008f57005b61009761065e565b005b5061009761063f565b506100976105bc565b50610097610592565b5061009761047d565b5061009761044d565b50610097610379565b50610097610316565b506100976102e3565b50610097610138565b50346101335760203660031901126101335760043560005260036020526060604060002080549060ff600660058301549201541690604051928352602083015215156040820152f35b600080fd5b5034610133576020366003190112610133576004803561015781610ea4565b916000926101648461042d565b61016d8161042d565b6102c957600082815260036020526040902060068101805460ff191660019081179091559060038101928181019180840191600282019160050188865b6101db575b8989604051907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8383a2f35b8985548210156102c3578187828b898961028e968a8f99610259816102528161024c8f8261023c6102276102789961022161021c61021c610242975461030a565b61030a565b9e610adc565b905460039190911b1c6001600160a01b031690565b9a610adc565b90549060031b1c90565b99610adc565b5099610adc565b508c5490604051998a9889978896630825f38f60e01b88528701610c9f565b03925af180156102b6575b610294575b50610aa9565b906101aa565b6102af903d808f833e6102a78183610a21565b810190610b71565b5038610288565b6102be610a66565b610283565b506101af565b604051633c7e994560e11b8152fd5b600091031261013357565b503461013357600036600319011261013357602060ff60015460a01c166040519015158152f35b6001600160a01b031690565b5034610133576000366003190112610133576000546040516001600160a01b039091168152602090f35b6001600160a01b0381160361013357565b9190826040910312610133576020823561036a81610340565b92013561037681610340565b90565b50346101335761038a366004610351565b61039861021c60015461030a565b330361041c576040516370a0823160e01b81523060048201526100979290916020836024816001600160a01b0385165afa92831561040f575b6000936103df575b50610f80565b61040191935060203d8111610408575b6103f98183610a21565b810190610e89565b91386103d9565b503d6103ef565b610417610a66565b6103d1565b6040516282b42960e81b8152600490fd5b6003111561043757565b634e487b7160e01b600052602160045260246000fd5b50346101335760203660031901126101335761046a600435610ea4565b6040516003821015610437576020918152f35b50346101335761048e366004610351565b9061049f60015460ff9060a01c1690565b610581576040516303e1469160e61b81526001600160a01b0383811691602081600481865afa908115610574575b600091610546575b508130911603610534576104f66000946104ef8587610a73565b6001610a73565b6001805460ff60a01b1916600160a01b17905560405192167f3cd5ec01b1ae7cfec6ca1863e2cd6aa25d6d1702825803ff2b7cc95010fffdc28484a3f35b6040516336e038cd60e21b8152600490fd5b610567915060203d811161056d575b61055f8183610a21565b810190610a51565b386104d5565b503d610555565b61057c610a66565b6104cd565b60405162dc149f60e41b8152600490fd5b5034610133576000366003190112610133576001546040516001600160a01b039091168152602090f35b5034610133576020366003190112610133576004356105da81610340565b6001546001600160a01b0316330361041c57600080809247604051915af13d1561063a573d61060881610b12565b906106166040519283610a21565b8152600060203d92013e5b1561062857005b60405163d1a4579f60e01b8152600490fd5b610621565b5034610133576000366003190112610133576020600254604051908152f35b50346101335760408060031936011261013357600490813561067f81610340565b602435926001600160401b0380851161013357366023860112156101335784820135908111610133578401602401368111610133576000946106c461021c875461030a565b6001600160a01b039094169384036109fb579060246106e39201611154565b9082939492518551036109eb5780518551036109eb5781518551036109eb5760019261071561021c61021c865461030a565b9061074689518093630d48571f60e31b8252818460209687935afa9081156109de575b8c916109c1575b5042610e98565b948a815b6107f5575b50505091859493916107ef937f216ba108683905cf17ff4c7b04b9711edbdf8ebf5cc06eeecee4b5d5e7c3c6d297610788600254610aa9565b918260025561079760e0610b02565b928352820152858a8201528160608201528260808201528360a08201526107c38b60c083019015159052565b6107e2816107dd8151600390600052602052604060002090565b611696565b519489519687968761180d565b0390a251f35b8b8b8a518310156109ba57859083808b818f8f8d8f9184938d546108189061030a565b6108219061030a565b61082a9061030a565b9861083491611222565b516001600160a01b03169361084891611222565b519561085391611222565b519261085e91611222565b51928651938493898501966108739488611269565b03601f19810182526108859082610a21565b519020915163f2b0653760e01b8152878101928352938492839190829060200103925af19081156109ad575b8d91610980575b50610970576109478187868f8f8d8f91928a8f610932908f966109178b8f9e8f906109108161090a6108fd826108f761021c61021c610910995461030a565b9f611222565b516001600160a01b031690565b9b611222565b519b611222565b519051633a66f90160e01b8152998a98899788968701611269565b03925af18015610963575b61094d5750610aa9565b9061074a565b6102af90873d8911610408576103f98183610a21565b61096b610a66565b61093d565b8a516333108cbb60e01b81528390fd5b6109a09150853d87116109a6575b6109988183610a21565b8101906112a6565b386108b8565b503d61098e565b6109b5610a66565b6108b1565b505061074f565b6109d89150843d8611610408576103f98183610a21565b3861073f565b6109e6610a66565b610738565b865163a554dcdf60e01b81528390fd5b84516282b42960e81b81528390fd5b50634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610a4457604052565b610a4c610a0a565b604052565b90816020910312610133575161037681610340565b506040513d6000823e3d90fd5b80546001600160a01b0319166001600160a01b03909216919091179055565b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610ab9570190565b610ac1610a92565b0190565b50634e487b7160e01b600052603260045260246000fd5b8054821015610af5575b60005260206000200190600090565b610afd610ac5565b610ae6565b90610b106040519283610a21565b565b6020906001600160401b038111610b2f575b601f01601f19160190565b610b37610a0a565b610b24565b918091926000905b828210610b5c575011610b55575050565b6000910152565b91508060209183015181860152018291610b44565b602081830312610133578051906001600160401b038211610133570181601f82011215610133578051610ba381610b12565b92610bb16040519485610a21565b81845260208284010111610133576103769160208085019101610b3c565b90600182811c92168015610bff575b6020831014610be957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610bde565b9060009291805491610c1a83610bcf565b918282526001938481169081600014610c7c5750600114610c3c575b50505050565b90919394506000526020928360002092846000945b838610610c68575050505001019038808080610c36565b805485870183015294019385908201610c51565b9294505050602093945060ff191683830152151560051b01019038808080610c36565b95949390608093610cdc93610cce9260018060a01b03168952602089015260a0604089015260a0880190610c09565b908682036060880152610c09565b930152565b9060405191828154918282526020928383019160005283600020936000905b828210610d1657505050610b1092500383610a21565b855484526001958601958895509381019390910190610d00565b6020906001600160401b038111610d49575b60051b0190565b610d51610a0a565b610d42565b908154610d6281610d30565b92604093610d7285519182610a21565b828152809460208092019260005281600020906000935b858510610d9857505050505050565b60018481928451610db481610dad818a610c09565b0382610a21565b815201930194019391610d89565b90604051610dd160e082610a21565b8092805482526001808201604051908192815490818452602080940192600052836000209160005b818110610e6d5750505050610b10949383610e6693610e1e60c0966006950383610a21565b860152610e2d60028201610ce1565b6040860152610e3e60038201610d56565b6060860152610e4f60048201610d56565b6080860152600581015460a0860152015460ff1690565b1515910152565b83546001600160a01b0316855293850193928201928201610df9565b90816020910312610133575190565b81198111610ab9570190565b60025481118015610f78575b610f6657610ecc610ed191600390600052602052604060002090565b610dc2565b60c081015115610ee15750600290565b600460a0610f289201516020610efe61021c61021c60015461030a565b6040516360d143f160e11b815293849182905afa918215610f59575b600092610f39575b50610e98565b421115610f3457600190565b600090565b610f5291925060203d8111610408576103f98183610a21565b9038610f22565b610f61610a66565b610f1a565b604051630992f7ad60e01b8152600490fd5b508015610eb0565b6001600160a01b03939290841690813b156101335760405194859363a9059cbb60e01b855216600484015260248301528160446000958680945af18015611020575b611006575b503d8015610ffb57602014610fda575080fd5b90602081803e515b15610fe957565b60405163cefaffeb60e01b8152600490fd5b509050600019610fe2565b806110148461101a93610a21565b806102d8565b38610fc7565b611028610a66565b610fc2565b81601f820112156101335780359161104483610d30565b926110526040519485610a21565b808452602092838086019260051b820101928311610133578301905b82821061107c575050505090565b8135815290830190830161106e565b92919261109782610b12565b916110a56040519384610a21565b829481845281830111610133578281602093846000960137010152565b81601f82011215610133578035906110d982610d30565b926040926110e984519586610a21565b808552602093848087019260051b8501019383851161013357858101925b858410611118575050505050505090565b83356001600160401b03811161013357820185603f820112156101335787916111498783878680960135910161108b565b815201930192611107565b91608083830312610133576001600160401b039083358281116101335784019383601f8601121561013357843561118a81610d30565b906111986040519283610a21565b808252602096878084019260051b820101918783116101335788809201905b83821061120957505050509481013583811161013357846111d991830161102d565b93604082013584811161013357816111f29184016110c2565b9360608301359081116101335761037692016110c2565b828091833561121781610340565b8152019101906111b7565b6020918151811015611237575b60051b010190565b61123f610ac5565b61122f565b9060209161125d81518092818552858086019101610b3c565b601f01601f1916010190565b95949390608093610cdc936112989260018060a01b03168952602089015260a0604089015260a0880190611244565b908682036060880152611244565b90816020910312610133575180151581036101335790565b50634e487b7160e01b600052600060045260246000fd5b8181106112e0575050565b600081556001016112d5565b918181106112f957505050565b610b1092600052602060002091820191016112d5565b815191600160401b8311611361575b61132d838354818555846112ec565b602080910191600052806000206000925b84841061134c575050505050565b6001838282935185550192019301929061133e565b611369610a0a565b61131e565b90600091808352602083209182548160011b9185199060031b1c191617905555565b9190601f811161139f57505050565b610b10926000526020600020906020601f840160051c830193106113cb575b601f0160051c01906112d5565b90915081906113be565b909291926114b7575b82516001600160401b0381116114aa575b611403816113fd8454610bcf565b84611390565b602080601f831160011461143f575081929394600092611434575b50508160011b916000199060031b1c1916179055565b01519050388061141e565b90601f1983169561145585600052602060002090565b926000905b88821061149257505083600195969710611479575b505050811b019055565b015160001960f88460031b161c1916905538808061146f565b8060018596829496860151815501950193019061145a565b6114b2610a0a565b6113ef565b6114bf6112be565b6113de565b815191600160401b83116115a7575b8154838355808410611526575b506114f5602080920192600052602060002090565b600080935b85851061150957505050505050565b6001848261151a83945186886113d5565b019301940193916114fa565b6000838152846020822092830192015b8281106115445750506114e0565b8061155160019254610bcf565b8061155e575b5001611536565b601f9081811184146115765750508281555b38611557565b836115989261158a85600052602060002090565b920160051c820191016112d5565b6115a2838261136e565b611570565b6115af610a0a565b6114d3565b815191600160401b8311611689575b8154838355808410611616575b506115e5602080920192600052602060002090565b600080935b8585106115f957505050505050565b6001848261160a83945186886113d5565b019301940193916115ea565b6000838152846020822092830192015b8281106116345750506115d0565b8061164160019254610bcf565b8061164e575b5001611626565b601f9081811184146116665750508281555b38611647565b8361167a9261158a85600052602060002090565b611684838261136e565b611660565b611691610a0a565b6115c3565b90805182556001808301602090818401519180835193600160401b8511611770575b6116c7858554818755866112ec565b0191600052806000206000925b8484106117445750505050505090600661173160c0846116fe6040610b109701516002870161130f565b61170f6060820151600387016114c4565b6117206080820151600487016115b4565b60a081015160058601550151151590565b91019060ff801983541691151516179055565b805182546001600160a01b0319166001600160a01b0391909116178255928501929085019082016116d4565b611778610a0a565b6116b8565b90815180825260208080930193019160005b82811061179d575050505090565b83518552938101939281019260010161178f565b908082519081815260208091019281808460051b8301019501936000915b8483106117df5750505050505090565b90919293949584806117fd600193601f198682030187528a51611244565b98019301930191949392906117cf565b96959493929060c0880190885260209060c0828a015283518091528160e08a0194019160005b8281106118765750505050610cdc9261185a83611868938a60a098960360408c015261177d565b9088820360608a01526117b1565b9086820360808801526117b1565b83516001600160a01b03168652948101949281019260010161183356fea2646970667358221220a1376a7accc928e8ae9fa8aeeaa9c4e2c998cea737600e1c7cb28856dca1bdd564736f6c634300080f0033";

type SweepableBridgeReceiverHarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SweepableBridgeReceiverHarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SweepableBridgeReceiverHarness__factory extends ContractFactory {
  constructor(...args: SweepableBridgeReceiverHarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SweepableBridgeReceiverHarness> {
    return super.deploy(
      overrides || {}
    ) as Promise<SweepableBridgeReceiverHarness>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SweepableBridgeReceiverHarness {
    return super.attach(address) as SweepableBridgeReceiverHarness;
  }
  connect(signer: Signer): SweepableBridgeReceiverHarness__factory {
    return super.connect(signer) as SweepableBridgeReceiverHarness__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SweepableBridgeReceiverHarnessInterface {
    return new utils.Interface(_abi) as SweepableBridgeReceiverHarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SweepableBridgeReceiverHarness {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SweepableBridgeReceiverHarness;
  }
}
