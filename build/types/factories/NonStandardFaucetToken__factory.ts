/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NonStandardFaucetToken,
  NonStandardFaucetTokenInterface,
} from "../NonStandardFaucetToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "allocateTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620003395762000aa6803803806200001d816200033e565b9283398101608082820312620003395781516020808401519093916001600160401b0391828111620003395784620000579185016200037a565b9260408101519460ff86168096036200033957606082015184811162000339576200008392016200037a565b8160035560009133835260058752604083205583519183831162000243578054926001958685811c951680156200032e575b898610146200031a578190601f95868111620002c7575b5089908683116001146200026357849262000257575b5050600019600383901b1c191690861b1781555b8151938411620002435784548581811c9116801562000238575b888210146200022457838111620001dc575b508692841160011462000176578394959650926200016a575b5050600019600383901b1c191690821b1790555b60ff1960025416176002556040516106a89081620003fe8239f35b0151905038806200013b565b9190601f1984169685845280842093905b888210620001c45750508385969710620001aa575b505050811b0190556200014f565b015160001960f88460031b161c191690553880806200019c565b80878596829496860151815501950193019062000187565b8582528782208480870160051c8201928a88106200021a575b0160051c019086905b8281106200020e57505062000122565b838155018690620001fe565b92508192620001f5565b634e487b7160e01b82526022600452602482fd5b90607f169062000110565b634e487b7160e01b81526041600452602490fd5b015190503880620000e2565b8480528a85208994509190601f198416865b8d828210620002b0575050841162000296575b505050811b018155620000f6565b015160001960f88460031b161c1916905538808062000288565b8385015186558c9790950194938401930162000275565b9091508380528984208680850160051c8201928c861062000310575b918a91869594930160051c01915b82811062000301575050620000cc565b8681558594508a9101620002f1565b92508192620002e3565b634e487b7160e01b83526022600452602483fd5b94607f1694620000b5565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200036457604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121562000339578051906001600160401b0382116200036457602090620003af601f8401601f191683016200033e565b93838552828483010111620003395782906000905b83838310620003e457505011620003da57505090565b6000918301015290565b81935082819392010151828288010152018391620003c456fe6040608081526004908136101561001557600080fd5b600091823560e01c806306fdde031461044d57806308bca566146103e3578063095ea7b31461036e57806318160ddd1461034f57806323b872dd1461020b578063313ce567146101e957806370a08231146101b057806395d89b411461017d578063a9059cbb146100e65763dd62ed3e1461008f57600080fd5b346100e257816003193601126100e2576001600160a01b03908035828116908190036100de576024359283168093036100de579184918493602096528552828220908252845220549051908152f35b8480fd5b8280fd5b50346100e257816003193601126100e257356001600160a01b038116908190036100e257602435338452600080516020610653833981519152602060058152610134858720548411156105ca565b338652600581526101488386882054610625565b3387526005825285872055838652600581526101678386882054610646565b848752600582528587205584519283523392a351f35b5050346101ac57816003193601126101ac5761019d6101a8926001610468565b905191829182610573565b0390f35b5080fd5b50346100e25760203660031901126100e257356001600160a01b038116908190036100e257828291602094526005845220549051908152f35b5050346101ac57816003193601126101ac5760209060ff600254169051908152f35b50346100e25760603660031901126100e2576001600160a01b0390803582811691908290036100de576024359283168093036100de5760443582865260209180835285872033885283528587205482116102fb5790600080516020610653833981519152929184885260058352610287878920548311156105ca565b84885280835286882033895283526102a282888a2054610625565b908589528352868820338952835286882055838752600582526102c88187892054610625565b8488526005835286882055848752600582526102e78187892054610646565b85885260058352868820558551908152a351f35b855162461bcd60e51b8152908101839052602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608490fd5b5050346101ac57816003193601126101ac576020906003549051908152f35b50346100e257816003193601126100e25780356001600160a01b03811691908290036103df57926020938360243592839233825287528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8380fd5b50346100e257816003193601126100e257356001600160a01b038116908190036100e2576024358184526005602052828420610420828254610646565b905561042e81600354610646565b600355825190815260008051602061065383398151915260203092a351f35b5050346101ac57816003193601126101ac5761019d826101a8935b9061055d5760405190600090805490600182811c91818416938415610553575b602094858510811461053f5784885290811561052157506001146104e5575b50505050819003601f01601f191681016001600160401b038111828210176104cf5760405290565b634e487b7160e01b600052604160045260246000fd5b909293506000528260002091836000935b83851061050d5750505050820101388080806104a7565b8054878601830152930192849082016104f6565b60ff191687860152505050151560051b8301019050388080806104a7565b634e487b7160e01b87526022600452602487fd5b92607f1692610488565b634e487b7160e01b600052600060045260246000fd5b919091602080825283519081818401526000945b8286106105b45750508060409394116105a7575b601f01601f1916010190565b600083828401015261059b565b8581018201518487016040015294810194610587565b156105d157565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b818110610630570390565b634e487b7160e01b600052601160045260246000fd5b8119811161063057019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a5aca043d4d86aaa660c39808451c6835bb25d375c6a417eb415951070643e0464736f6c634300080f0033";

type NonStandardFaucetTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonStandardFaucetTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonStandardFaucetToken__factory extends ContractFactory {
  constructor(...args: NonStandardFaucetTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NonStandardFaucetToken> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<NonStandardFaucetToken>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): NonStandardFaucetToken {
    return super.attach(address) as NonStandardFaucetToken;
  }
  connect(signer: Signer): NonStandardFaucetToken__factory {
    return super.connect(signer) as NonStandardFaucetToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonStandardFaucetTokenInterface {
    return new utils.Interface(_abi) as NonStandardFaucetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonStandardFaucetToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonStandardFaucetToken;
  }
}
