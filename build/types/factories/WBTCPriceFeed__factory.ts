/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WBTCPriceFeed, WBTCPriceFeedInterface } from "../WBTCPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "WBTCToBTCPriceFeed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "BTCToUSDPriceFeed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadDecimals",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "BTCToUSDPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTCToBTCPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "combinedScale",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeedScale",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610120604090808252346102125760608161085f80380380916100228285610217565b8339810103126102125761003581610250565b9060209061004f84610048848401610250565b9201610264565b928060a0528160c052845163313ce56760e01b92838252848260048160018060a01b038097165afa9384156102075785926000956101ca575b50600490885194859384928352165afa9283156101bf57600093610181575b505060ff80911691168060ff03821161016b576100c49101610272565b6001600160ff1b03811161015a5760e05260ff81169060128211610149576080526100ee90610272565b90610100918252516105db91826102848339608051826101d1015260a05182818161020901526103f1015260c0518281816102860152610433015260e05182818161024f01526104b501525181818161017a015261048d0152f35b8251630456c65960e51b8152600490fd5b825163e7e828ad60e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b8181949293943d83116101b8575b6101998183610217565b810103126101b5575060ff6101ae8192610264565b92916100a7565b80fd5b503d61018f565b85513d6000823e3d90fd5b919282819692963d8311610200575b6101e38183610217565b810103126101b557509060046101f98693610264565b9490610088565b503d6101d9565b87513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761023a57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361021257565b519060ff8216820361021257565b60ff16604d811161016b57600a0a9056fe60806040818152600436101561001457600080fd5b600091823560e01c9081631de5ffd514610272575080632b9357df146102385780632c3596f2146101f5578063313ce567146101b857806354fd4d501461019d5780635fd4c7c5146101635780637284e416146100c55763feaf968c1461007a57600080fd5b346100c157816003193601126100c15760a0906100956103cd565b85516001600160501b039586168152602081019490945294830191909152606082015291166080820152f35b5080fd5b50346100c157816003193601126100c15780516100e282826102b5565b6020908181527f437573746f6d207072696365206665656420666f722057425443202f20555344828201528251938285938452825192838286015282915b84831061014b575050821061013f575b50601f01601f19168101030190f35b83828401015238610130565b81830181015188840188015287955091820191610120565b50346100c157816003193601126100c157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346100c157816003193601126100c1576020905160018152f35b50346100c157816003193601126100c1576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346100c157816003193601126100c157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100c157816003193601126100c157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b8390346100c157816003193601126100c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b601f909101601f19168101906001600160401b038211908210176102d857604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160501b038216820361030257565b600080fd5b908160a09103126103025761031b816102ee565b916020820151916040810151916103396080606084015193016102ee565b90565b60008082138184136001600160ff1b038282168682048611166103a557600160ff1b92848712929083168685058812166103b9578685871294058612908416166103a557859005841291161661039157500290565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526011600452602485fd5b604051633fabe5a360e21b80825290916001600160a01b039160a0919082856004817f000000000000000000000000000000000000000000000000000000000000000088165afa9485156105735760009561057f575b50829060046040518096819382527f0000000000000000000000000000000000000000000000000000000000000000165afa908115610573576000948590869587958895610535575b50506000811380159061052a575b610520576104b29161048b9161033c565b7f00000000000000000000000000000000000000000000000000000000000000009061033c565b947f000000000000000000000000000000000000000000000000000000000000000090811561050a57600160ff1b87146000198314166104f457950593929190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b5050600093929190565b50600082131561047a565b939650935095505061055c9250803d1061056c575b61055481836102b5565b810190610307565b939591949093929091388061046c565b503d61054a565b6040513d6000823e3d90fd5b8391955061059990823d841161056c5761055481836102b5565b5050509050949061042356fea2646970667358221220811c306ad88feaf001aefcb0ab6f9d86560f8821a8a7bca74c85be12cd34e97b64736f6c634300080f0033";

type WBTCPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WBTCPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WBTCPriceFeed__factory extends ContractFactory {
  constructor(...args: WBTCPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    WBTCToBTCPriceFeed_: string,
    BTCToUSDPriceFeed_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WBTCPriceFeed> {
    return super.deploy(
      WBTCToBTCPriceFeed_,
      BTCToUSDPriceFeed_,
      decimals_,
      overrides || {}
    ) as Promise<WBTCPriceFeed>;
  }
  getDeployTransaction(
    WBTCToBTCPriceFeed_: string,
    BTCToUSDPriceFeed_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      WBTCToBTCPriceFeed_,
      BTCToUSDPriceFeed_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): WBTCPriceFeed {
    return super.attach(address) as WBTCPriceFeed;
  }
  connect(signer: Signer): WBTCPriceFeed__factory {
    return super.connect(signer) as WBTCPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WBTCPriceFeedInterface {
    return new utils.Interface(_abi) as WBTCPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WBTCPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as WBTCPriceFeed;
  }
}
