/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WstETHPriceFeed,
  WstETHPriceFeedInterface,
} from "../WstETHPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stETHtoETHPriceFeed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "wstETH_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadDecimals",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETHToETHPriceFeedDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETHtoETHPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETHScale",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040818152346101e257606082610870803803809161002182856101e7565b8339810103126101e25761003482610220565b602061004c83610045838701610220565b9501610234565b938260a052835163313ce56760e01b90818152838160048160018060a01b038099165afa9081156101d7579084939291600091610198575b509060ff6004921660c0528260e052865195869384928352165afa90811561018d57600091610155575b5060ff91501691604d831161013f5761010092600a0a835260c05160ff82161161012e576080525161062d918261024383396080518281816101a801526104c5015260a05182818160a8015261036d015260c0518281816101cc0152610501015260e05182818160f6015261047c015251818181610129015261053b0152f35b8151630456c65960e51b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b82813d8311610186575b61016981836101e7565b81010312610183575061017d60ff91610234565b386100ae565b80fd5b503d61015f565b83513d6000823e3d90fd5b91929382813d83116101d0575b6101af81836101e7565b81010312610183575083929160ff6101c8600493610234565b919250610084565b503d6101a5565b86513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761020a57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101e257565b519060ff821682036101e25756fe608060408181526004918236101561001657600080fd5b600090813560e01c90816317f098ca146105245750806322c2b36c146104e9578063313ce567146104ab5780634aa07e641461046757806354fd4d501461044b5780637284e416146103a0578063ed1a68d1146103585763feaf968c1461007c57600080fd5b346103555780600319360112610355578151633fabe5a360e21b81526001600160a01b039060a08186817f000000000000000000000000000000000000000000000000000000000000000086165afa91821561034b578380878293839584976102e6575b506020908951928380926312aed41960e31b82527f0000000000000000000000000000000000000000000000000000000000000000165afa9081156102dc5783916102a7575b507f00000000000000000000000000000000000000000000000000000000000000006001600160ff1b0384841385831381811684840487111661028057600160ff1b918785129190821687840586121661029357848888129305871290831616610280571682820585121661026d57821161025d576101a592026105b0565b907f000000000000000000000000000000000000000000000000000000000000000060ff167f000000000000000000000000000000000000000000000000000000000000000081811061024a570390604d8211610237575060a097509061020f91600a0a906105b0565b85516001600160501b0395861681526020810191909152948501526060840152166080820152f35b634e487b7160e01b815260118952602490fd5b634e487b7160e01b835260118a52602483fd5b885163e7e828ad60e01b81528a90fd5b634e487b7160e01b855260118b52602485fd5b634e487b7160e01b875260118d52602487fd5b50634e487b7160e01b875260118d52602487fd5b90506020813d82116102d4575b816102c16020938361055e565b810103126102d0575138610126565b8280fd5b3d91506102b4565b88513d85823e3d90fd5b95509550505093505060a0813d8211610343575b8161030760a0938361055e565b810103126102d05761031881610597565b9060208101519385820151876020610337608060608701519601610597565b959792949596906100e0565b3d91506102fa565b84513d85823e3d90fd5b80fd5b50903461039c578160031936011261039c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50903461039c578160031936011261039c5780516103bf60608261055e565b602281526020907f437573746f6d207072696365206665656420666f7220777374455448202f204582820152610a8960f31b838201528251938285938452825192838286015282915b8483106104335750508210610427575b50601f01601f19168101030190f35b83828401015284610418565b81830181015188840188015287955091820191610408565b50903461039c578160031936011261039c576020905160018152f35b50903461039c578160031936011261039c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461039c578160031936011261039c576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461039c578160031936011261039c57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b90503461039c578160031936011261039c576020907f00000000000000000000000000000000000000000000000000000000000000008152f35b601f909101601f19168101906001600160401b0382119082101761058157604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160501b03821682036105ab57565b600080fd5b81156105e157600160ff1b81146000198314166105cb570590565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212208789c4081a9491777910136005f0fe3b7522f8bf455ede097a7c97cda790641064736f6c634300080f0033";

type WstETHPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WstETHPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WstETHPriceFeed__factory extends ContractFactory {
  constructor(...args: WstETHPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    stETHtoETHPriceFeed_: string,
    wstETH_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WstETHPriceFeed> {
    return super.deploy(
      stETHtoETHPriceFeed_,
      wstETH_,
      decimals_,
      overrides || {}
    ) as Promise<WstETHPriceFeed>;
  }
  getDeployTransaction(
    stETHtoETHPriceFeed_: string,
    wstETH_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      stETHtoETHPriceFeed_,
      wstETH_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): WstETHPriceFeed {
    return super.attach(address) as WstETHPriceFeed;
  }
  connect(signer: Signer): WstETHPriceFeed__factory {
    return super.connect(signer) as WstETHPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WstETHPriceFeedInterface {
    return new utils.Interface(_abi) as WstETHPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WstETHPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as WstETHPriceFeed;
  }
}
