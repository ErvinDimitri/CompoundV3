/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ArbitrumBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbitrumBridgeReceiver__factory>;
    getContractFactory(
      name: "BaseBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBridgeReceiver__factory>;
    getContractFactory(
      name: "IMessageService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageService__factory>;
    getContractFactory(
      name: "LineaBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LineaBridgeReceiver__factory>;
    getContractFactory(
      name: "IOvmL2CrossDomainMessengerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOvmL2CrossDomainMessengerInterface__factory>;
    getContractFactory(
      name: "OptimismBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimismBridgeReceiver__factory>;
    getContractFactory(
      name: "IFxMessageProcessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxMessageProcessor__factory>;
    getContractFactory(
      name: "PolygonBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PolygonBridgeReceiver__factory>;
    getContractFactory(
      name: "IScrollMessenger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScrollMessenger__factory>;
    getContractFactory(
      name: "ScrollBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScrollBridgeReceiver__factory>;
    getContractFactory(
      name: "SweepableBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SweepableBridgeReceiver__factory>;
    getContractFactory(
      name: "BaseBridgeReceiverHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBridgeReceiverHarness__factory>;
    getContractFactory(
      name: "SweepableBridgeReceiverHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SweepableBridgeReceiverHarness__factory>;
    getContractFactory(
      name: "BaseBulker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBulker__factory>;
    getContractFactory(
      name: "IClaimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimable__factory>;
    getContractFactory(
      name: "MainnetBulker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MainnetBulker__factory>;
    getContractFactory(
      name: "Comet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comet__factory>;
    getContractFactory(
      name: "CometCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometCore__factory>;
    getContractFactory(
      name: "CometExt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometExt__factory>;
    getContractFactory(
      name: "CometExtInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometExtInterface__factory>;
    getContractFactory(
      name: "CometFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometFactory__factory>;
    getContractFactory(
      name: "CometInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometInterface__factory>;
    getContractFactory(
      name: "CometMainInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometMainInterface__factory>;
    getContractFactory(
      name: "CometMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometMath__factory>;
    getContractFactory(
      name: "CometProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometProxyAdmin__factory>;
    getContractFactory(
      name: "Deployable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Deployable__factory>;
    getContractFactory(
      name: "CometRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometRewards__factory>;
    getContractFactory(
      name: "CometStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometStorage__factory>;
    getContractFactory(
      name: "Configurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Configurator__factory>;
    getContractFactory(
      name: "ConfiguratorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfiguratorProxy__factory>;
    getContractFactory(
      name: "ConfiguratorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfiguratorStorage__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IComp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComp__factory>;
    getContractFactory(
      name: "IERC20NonStandard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20NonStandard__factory>;
    getContractFactory(
      name: "IGovernorBravo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorBravo__factory>;
    getContractFactory(
      name: "IPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceFeed__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "ITimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimelock__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IWstETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWstETH__factory>;
    getContractFactory(
      name: "IStableSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStableSwap__factory>;
    getContractFactory(
      name: "IUniswapV2Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "OnChainLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnChainLiquidator__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV3FlashCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3FlashCallback__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "PeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryImmutableState__factory>;
    getContractFactory(
      name: "PeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryPayments__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IPeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryImmutableState__factory>;
    getContractFactory(
      name: "IPeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPayments__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ConstantPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstantPriceFeed__factory>;
    getContractFactory(
      name: "MultiplicativePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplicativePriceFeed__factory>;
    getContractFactory(
      name: "ScalingPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScalingPriceFeed__factory>;
    getContractFactory(
      name: "WBTCPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBTCPriceFeed__factory>;
    getContractFactory(
      name: "WstETHPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WstETHPriceFeed__factory>;
    getContractFactory(
      name: "ScrollComet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScrollComet__factory>;
    getContractFactory(
      name: "CometHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometHarness__factory>;
    getContractFactory(
      name: "CometHarnessInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometHarnessInterface__factory>;
    getContractFactory(
      name: "CometModified",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometModified__factory>;
    getContractFactory(
      name: "CometModifiedFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometModifiedFactory__factory>;
    getContractFactory(
      name: "Dog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dog__factory>;
    getContractFactory(
      name: "EvilToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvilToken__factory>;
    getContractFactory(
      name: "Fauceteer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fauceteer__factory>;
    getContractFactory(
      name: "FaucetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetToken__factory>;
    getContractFactory(
      name: "StandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardToken__factory>;
    getContractFactory(
      name: "FaucetWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetWETH__factory>;
    getContractFactory(
      name: "GovernorSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorSimple__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "NonStandardFaucetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonStandardFaucetToken__factory>;
    getContractFactory(
      name: "NonStandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonStandardToken__factory>;
    getContractFactory(
      name: "SimplePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimplePriceFeed__factory>;
    getContractFactory(
      name: "SimpleTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleTimelock__factory>;
    getContractFactory(
      name: "SimpleWstETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleWstETH__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;

    getContractAt(
      name: "ArbitrumBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArbitrumBridgeReceiver>;
    getContractAt(
      name: "BaseBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBridgeReceiver>;
    getContractAt(
      name: "IMessageService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageService>;
    getContractAt(
      name: "LineaBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LineaBridgeReceiver>;
    getContractAt(
      name: "IOvmL2CrossDomainMessengerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOvmL2CrossDomainMessengerInterface>;
    getContractAt(
      name: "OptimismBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimismBridgeReceiver>;
    getContractAt(
      name: "IFxMessageProcessor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxMessageProcessor>;
    getContractAt(
      name: "PolygonBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PolygonBridgeReceiver>;
    getContractAt(
      name: "IScrollMessenger",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScrollMessenger>;
    getContractAt(
      name: "ScrollBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScrollBridgeReceiver>;
    getContractAt(
      name: "SweepableBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SweepableBridgeReceiver>;
    getContractAt(
      name: "BaseBridgeReceiverHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBridgeReceiverHarness>;
    getContractAt(
      name: "SweepableBridgeReceiverHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SweepableBridgeReceiverHarness>;
    getContractAt(
      name: "BaseBulker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBulker>;
    getContractAt(
      name: "IClaimable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimable>;
    getContractAt(
      name: "MainnetBulker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MainnetBulker>;
    getContractAt(
      name: "Comet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Comet>;
    getContractAt(
      name: "CometCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometCore>;
    getContractAt(
      name: "CometExt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometExt>;
    getContractAt(
      name: "CometExtInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometExtInterface>;
    getContractAt(
      name: "CometFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometFactory>;
    getContractAt(
      name: "CometInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometInterface>;
    getContractAt(
      name: "CometMainInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometMainInterface>;
    getContractAt(
      name: "CometMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometMath>;
    getContractAt(
      name: "CometProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometProxyAdmin>;
    getContractAt(
      name: "Deployable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Deployable>;
    getContractAt(
      name: "CometRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometRewards>;
    getContractAt(
      name: "CometStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometStorage>;
    getContractAt(
      name: "Configurator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Configurator>;
    getContractAt(
      name: "ConfiguratorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfiguratorProxy>;
    getContractAt(
      name: "ConfiguratorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfiguratorStorage>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IComp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IComp>;
    getContractAt(
      name: "IERC20NonStandard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20NonStandard>;
    getContractAt(
      name: "IGovernorBravo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorBravo>;
    getContractAt(
      name: "IPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceFeed>;
    getContractAt(
      name: "IProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "ITimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITimelock>;
    getContractAt(
      name: "IWETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH9>;
    getContractAt(
      name: "IWstETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWstETH>;
    getContractAt(
      name: "IStableSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStableSwap>;
    getContractAt(
      name: "IUniswapV2Router",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "OnChainLiquidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnChainLiquidator>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV3FlashCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3FlashCallback>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "IUniswapV3PoolActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolActions>;
    getContractAt(
      name: "IUniswapV3PoolDerivedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDerivedState>;
    getContractAt(
      name: "IUniswapV3PoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolEvents>;
    getContractAt(
      name: "IUniswapV3PoolImmutables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolImmutables>;
    getContractAt(
      name: "IUniswapV3PoolOwnerActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolOwnerActions>;
    getContractAt(
      name: "IUniswapV3PoolState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolState>;
    getContractAt(
      name: "PeripheryImmutableState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PeripheryImmutableState>;
    getContractAt(
      name: "PeripheryPayments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PeripheryPayments>;
    getContractAt(
      name: "IWETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH9>;
    getContractAt(
      name: "IPeripheryImmutableState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryImmutableState>;
    getContractAt(
      name: "IPeripheryPayments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryPayments>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "ConstantPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConstantPriceFeed>;
    getContractAt(
      name: "MultiplicativePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplicativePriceFeed>;
    getContractAt(
      name: "ScalingPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScalingPriceFeed>;
    getContractAt(
      name: "WBTCPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBTCPriceFeed>;
    getContractAt(
      name: "WstETHPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WstETHPriceFeed>;
    getContractAt(
      name: "ScrollComet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScrollComet>;
    getContractAt(
      name: "CometHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometHarness>;
    getContractAt(
      name: "CometHarnessInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometHarnessInterface>;
    getContractAt(
      name: "CometModified",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometModified>;
    getContractAt(
      name: "CometModifiedFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CometModifiedFactory>;
    getContractAt(
      name: "Dog",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Dog>;
    getContractAt(
      name: "EvilToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvilToken>;
    getContractAt(
      name: "Fauceteer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fauceteer>;
    getContractAt(
      name: "FaucetToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetToken>;
    getContractAt(
      name: "StandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardToken>;
    getContractAt(
      name: "FaucetWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetWETH>;
    getContractAt(
      name: "GovernorSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorSimple>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "NonStandardFaucetToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonStandardFaucetToken>;
    getContractAt(
      name: "NonStandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonStandardToken>;
    getContractAt(
      name: "SimplePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimplePriceFeed>;
    getContractAt(
      name: "SimpleTimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleTimelock>;
    getContractAt(
      name: "SimpleWstETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleWstETH>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "TransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransparentUpgradeableProxy>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
